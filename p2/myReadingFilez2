{
                perror("send error");
                exit(1);
              }


              bzero(sendBuff,MAXLINE2); 
              bzero(recvBuff,MAXLINE2);
        }else if(strncmp(recvBuff,"size",4) == 0){
              printf("the recvbuff in size is: %s\n",recvBuff);
              bzero(sendBuff,MAXLINE2);
              char subBuff2[200];
              memcpy(subBuff2, &recvBuff[4], strlen(recvBuff));
              bytesToRead = atoi(subBuff2);

              sprintf(sendBuff,"needPos");
              sendfd = write(connfd, sendBuff, strlen(sendBuff));
              if(sendfd < 0){
                perror("send error");
                exit(1);
              }
              bzero(subBuff2,MAXLINE2);
              bzero(recvBuff,MAXLINE2);
        }else if(strncmp(recvBuff,"position",8) == 0){
              bzero(sendBuff,MAXLINE2);
              char subBuff3[200];
              memcpy(subBuff3, &recvBuff[8], strlen(recvBuff));
              position = atoi(subBuff3);
            printf("the position is: %d\n", position);

            //anothr change?
            if (fileRead == NULL){
                printf("FOUND MY ERROR\n");
                exit(1);
            }
            rewind(fileRead);
            fseek(fileRead,position,SEEK_SET);
            printf("Success in fseek 0th time\n");
                   
            int writefd = 0;
            int newLen = 0;    
            int bytesDivisible = 0;
            int bytesRemainder = 0;    

            //fix issue?
            //bytesToRead--;

            bzero(sendBuff,MAXLINE2);
            bzero(recvBuff,MAXLINE2);
            bytesDivisible = bytesToRead/MAXLINE2;
            bytesRemainder = bytesToRead%MAXLINE2;
            printf("11111111111111111111111111\n");
            printf("the bytesToRead is: %d\n",bytesToRead);
            printf("the bytesRemainder is: %d\n",bytesRemainder);
            printf("the bytesDivisible is: %d\n",bytesDivisible);
            int temp = 0;
            while(temp <= bytesDivisible){
                bzero(sendBuff,MAXLINE2);
                if(temp == 0){
                    printf("\n\n\n\ncame into first time\n");
                    fseek(fileRead,position,SEEK_SET);
                    newLen = fread(sendBuff,sizeof(char),bytesRemainder,fileRead);
                    fseek(fileRead,position + bytesRemainder,SEEK_SET);
                    printf("the newLen is: %d\n",newLen);
                    printf("able to do fseek first time\n\n\n\n");
                    if (temp == bytesDivisible){
                        printf("came into here early!!\n");
                        setForExit = 1;
                    } 
                }else{
                    printf("\n\n\n\ncame into second time\n");
                    fseek(fileRead,position + bytesRemainder + ((bytesDivisible - 1) * MAXLINE2),SEEK_SET);
                    newLen = fread(sendBuff,sizeof(char),MAXLINE2,fileRead);
                    printf("able to do fseek second time\n\n\n\n");
                    if (temp == by